name: Build linuxdeployqt

on:
  # 允许手动触发工作流
  workflow_dispatch:
    # 可选的输入参数
    inputs:
      build-type:
        description: '构建类型'
        required: false
        default: 'release'
        type: choice
        options:
          - release
          - debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 第一步：克隆 linuxdeployqt 仓库并进入指定目录
      - name: Clone linuxdeployqt repository
        run: |
          git clone https://github.com/probonopd/linuxdeployqt.git
          cd linuxdeployqt/tools/linuxdeployqt
          git submodule update --init --recursive
          
      # 第二步：注释掉 glibc 版本检查代码
      - name: Disable glibc version check
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          # 使用 sed 命令注释掉指定的代码块
          sed -i '/if (strverscmp (glcv, "2.36") >= 0) {/,/^        }$/ s/^/\/\//' main.cpp
          
      # 第三步：修复 CMakeLists.txt 文件结构
      - name: Fix CMakeLists.txt structure
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          # 确保文件开头有 project() 命令，且在 cmake_minimum_required() 之后
          if ! grep -q "^project(" CMakeLists.txt; then
          # 如果还没有 project() 命令，在 cmake_minimum_required 之后添加
          sed -i '/cmake_minimum_required/aproject(linuxdeployqt)' CMakeLists.txt
          fi

      # 第四步：安装 Qt5 和必要的依赖
      - name: Install Qt5 and dependencies
        run: |
          sudo apt-get update
          # 安装基本的 Qt5 开发依赖
          sudo apt-get install -y qt5-default qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5
          # 获取 Qt5 的安装路径，用于设置 CMAKE_PREFIX_PATH
          QTDIR=$(find /usr -name "qt5-config.cmake" 2>/dev/null | head -n1 | xargs dirname | xargs dirname)
          echo "QTDIR=$QTDIR" >> $GITHUB_ENV
    
      # 第五步：构建项目
      - name: Build project
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          # 配置项目，设置 Qt5 的路径
          cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_PREFIX_PATH=$QTDIR
          # 编译项目
          make -j$(nproc)
          # 安装到临时目录并列出文件
          make DESTDIR=appdir -j$(nproc) install
          find appdir/
          env:
          # 使用之前找到的 Qt 路径
          QTDIR: ${{ env.QTDIR }}
