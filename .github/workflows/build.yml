name: Build linuxdeployqt

on:
  workflow_dispatch:
    inputs:
      build-type:
        description: '构建类型'
        required: false
        default: 'release'
        type: choice
        options:
          - release
          - debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 第一步：克隆 linuxdeployqt 仓库并进入指定目录
      - name: Clone linuxdeployqt repository
        run: |
          git clone https://github.com/probonopd/linuxdeployqt.git
          cd linuxdeployqt/tools/linuxdeployqt
          git submodule update --init --recursive
          
      # 第二步：修复 main.cpp 中的语法错误
      - name: Fix main.cpp syntax errors
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          # 恢复原始文件
          git checkout -- main.cpp 
          sed -i '/if (strverscmp (glcv, "2.36") >= 0) {/,/^        }$/ s/^/\/\//' main.cpp

      # 第三步：在 CMakeLists.txt 文件中添加 CMake 最低版本要求
      - name: Add CMake minimum version requirement
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          # 在 CMakeLists.txt 文件开头添加 cmake_minimum_required(VERSION 3.31)
          if ! grep -q "cmake_minimum_required" CMakeLists.txt; then
              sed -i '1icmake_minimum_required(VERSION 3.31)' CMakeLists.txt
          fi
          
          # 添加 project() 命令
          if ! grep -q "^project(" CMakeLists.txt; then
              sed -i '/cmake_minimum_required/aproject(linuxdeployqt)' CMakeLists.txt
          fi

      # 第四步：安装 Qt5 和必要的依赖
      - name: Install Qt5 and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt5-qmake qtchooser qtbase5-dev-tools libgl1-mesa-dev
          QMAKE_PATH=$(which qmake-qt5 || echo "/usr/lib/qt5/bin/qmake")
          echo "QMAKE_PATH=$QMAKE_PATH" >> $GITHUB_ENV
          echo "QT_SELECT=qt5" >> $GITHUB_ENV

      # 第五步：构建项目
      - name: Build project
        run: |
          cd linuxdeployqt/tools/linuxdeployqt
          cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/qt5/
          make -j$(nproc)
          make DESTDIR=appdir -j$(nproc) install
          find appdir/
        env:
          QT_SELECT: ${{ env.QT_SELECT }}
          
