import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15
import QtQuick.Dialogs
import QtQml 2.15

ApplicationWindow {
    id: mainWindow
    title: "MergeSub"
    width: 1000
    height: 700
    minimumWidth: 800
    minimumHeight: 600
    color: "#1e1f2a"
    visible: true

    // 状态变量
    property bool processing: false
    property bool previewMode: false
    property int selectedTab: 0
    property string ffmpegVersion: ""
    property string mergeSubVersion: "0.0.1"
    property string progressBar_Value: "0%"



    Component.onCompleted: {
        ffmpeghandel.check_Ffmpeg_Version()
        if(Math.round(0.995 * 100) + "%" === "100%"){
            console.log("true")
        }
        else{
             console.log("false")
        }
    }

    // 文件对话框
    FileDialog {
        id: videoFileDialog
        title: "选择视频文件"
        nameFilters: ["视频文件 (*.mp4 *.mkv *.avi *.mov *.flv *.wmv)"]
        onAccepted: {
            videoPath.text = getLocalPath(selectedFile)
            // 获取视频信息
            ffmpeghandel.videoFileUrl = videoPath.text
            ffmpeghandel.get_Video_Info()
        }
    }

    FileDialog {
        id: subtitleFileDialog
        title: "选择字幕文件"
        nameFilters: ["字幕文件 (*.srt *.ass *.vtt *.ssa *.sub)"]
        onAccepted: subtitlePath.text = getLocalPath(selectedFile)
    }

    FolderDialog {
        id: saveFileDialog
        title: "保存输出文件"
        onAccepted: outputPath.text = getLocalPath(currentFolder)
    }

    // 主布局
    SplitView {
        anchors.fill: parent
        orientation: Qt.Horizontal

        // 左侧控制面板
        Rectangle {
            id: controlPanel
            SplitView.preferredWidth: 350
            SplitView.minimumWidth: 300
            color: "#252836"
            clip: true

            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 15
                spacing: 15

                // 标题区域
                RowLayout {
                    Layout.fillWidth: true
                    spacing: 15

                    Image {
                        source: ""
                        Layout.preferredWidth: 48
                        Layout.preferredHeight: 48
                        fillMode: Image.PreserveAspectFit
                    }

                    Label {
                        text: "MergeSub"
                        font.pixelSize: 24
                        font.bold: true
                        color: "#6c5ce7"
                        Layout.fillWidth: true
                    }

                    Button {
                        text: previewMode ? "退出预览" : "视频预览"
                        onClicked: previewMode = !previewMode
                        background: Rectangle {
                            color: previewMode ? "#e74c3c" : "#3498db"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: "white"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                    }
                }

                // 选项卡
                TabBar {
                    id: tabBar
                    Layout.fillWidth: true
                    background: Rectangle { color: "transparent" }

                    TabButton {
                        text: "文件设置"
                        width: implicitWidth
                        background: Rectangle {
                            color: selectedTab === 0 ? "#6c5ce7" : "transparent"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedTab === 0 ? "white" : "#b2bec3"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        onClicked: selectedTab = 0
                    }
                    TabButton {
                        text: "视频设置"
                        width: implicitWidth
                        background: Rectangle {
                            color: selectedTab === 1 ? "#6c5ce7" : "transparent"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedTab === 1 ? "white" : "#b2bec3"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        onClicked: selectedTab = 1
                    }
                    TabButton {
                        text: "音频设置"
                        width: implicitWidth
                        background: Rectangle {
                            color: selectedTab === 2 ? "#6c5ce7" : "transparent"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedTab === 2 ? "white" : "#b2bec3"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        onClicked: selectedTab = 2
                    }
                    /*TabButton {
                        text: "字幕设置"
                        width: implicitWidth
                        background: Rectangle {
                            color: selectedTab === 3 ? "#6c5ce7" : "transparent"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedTab === 3 ? "white" : "#b2bec3"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        onClicked: selectedTab = 3
                    }*/
                    TabButton {
                        text: "软件设置"
                        width: implicitWidth
                        background: Rectangle {
                            color: selectedTab === 3 ? "#6c5ce7" : "transparent"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedTab === 3 ? "white" : "#b2bec3"
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        onClicked: selectedTab = 3
                    }
                }

                // 选项卡内容
                StackLayout {
                    Layout.fillWidth: true
                    Layout.fillHeight: true
                    currentIndex: selectedTab

                    // 文件设置
                    ColumnLayout {
                        spacing: 15

                        GroupBox {
                            title: "输入文件"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 3
                                width: parent.width

                                // 视频文件
                                Label {
                                    text: "视频文件:"
                                    color: "#b2bec3"
                                }
                                TextField {
                                    id: videoPath
                                    placeholderText: "选择视频文件..."
                                    Layout.fillWidth: true
                                    color: "#dfe6e9"
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                }
                                Button {
                                    icon.source: ""
                                    onClicked: videoFileDialog.open()
                                    background: Rectangle {
                                        color: "#6c5ce7"
                                        radius: 4
                                    }
                                }

                                // 字幕文件
                                Label {
                                    text: "字幕文件:"
                                    color: "#b2bec3"
                                }
                                TextField {
                                    id: subtitlePath
                                    placeholderText: "选择字幕文件..."
                                    Layout.fillWidth: true
                                    color: "#dfe6e9"
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                }
                                Button {
                                    icon.source: ""
                                    onClicked: subtitleFileDialog.open()
                                    background: Rectangle {
                                        color: "#6c5ce7"
                                        radius: 4
                                    }
                                }
                            }
                        }

                        GroupBox {
                            title: "输出设置"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 3
                                width: parent.width

                                // 输出文件
                                Label {
                                    text: "输出文件夹:"
                                    color: "#b2bec3"
                                }
                                TextField {
                                    id: outputPath
                                    placeholderText: "选择输出位置..."
                                    Layout.fillWidth: true
                                    color: "#dfe6e9"
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                }
                                Button {
                                    icon.source: ""
                                    onClicked: saveFileDialog.open()
                                    background: Rectangle {
                                        color: "#6c5ce7"
                                        radius: 4
                                    }
                                }

                                // 输出格式
                                Label {
                                    text: "输出格式:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: formatCombo
                                    model: ["MKV", "MP4", "AVI", "MOV", "FLV"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    Layout.columnSpan: 2
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }
                            }
                        }

                        GroupBox {
                            title: "任务预设"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 2
                                width: parent.width

                                // 预设
                                ComboBox {
                                    id: presetCombo
                                    model: ["默认设置", "高质量", "小文件", "快速压制", "自定义"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    Layout.columnSpan: 2
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }

                                    onCurrentIndexChanged: {
                                        switch(presetCombo.currentIndex) {
                                        case 0: // 默认设置
                                            videoCodec.currentIndex = 0;
                                            videoQuality.value = 27;
                                            videoPreset.currentIndex = 3;
                                            break;

                                        case 1: // 高质量
                                            videoCodec.currentIndex = 1;
                                            videoQuality.value = 22;
                                            videoPreset.currentIndex = 5;
                                            break;

                                        case 2: // 小文件
                                            videoCodec.currentIndex = 1;
                                            videoQuality.value = 28;
                                            videoPreset.currentIndex = 2;
                                            widthInput.text = "1280";
                                            heightInput.text = "720";
                                            break;

                                        case 3: // 快速压制
                                            videoCodec.currentIndex = 0;
                                            videoQuality.value = 25;
                                            videoPreset.currentIndex = 0;
                                            break;
                                        }
                                    }
                                }

                                // 预设描述
                                Label {
                                    text: "描述:"
                                    color: "#b2bec3"
                                }
                                Label {
                                    text: {
                                        switch(presetCombo.currentIndex) {
                                        case 0: return "平衡质量和文件大小";
                                        case 1: return "最佳质量，文件较大";
                                        case 2: return "较小文件，质量可接受";
                                        case 3: return "快速处理，质量一般";
                                        default: return "自定义设置";
                                        }
                                    }
                                    color: "#dfe6e9"
                                    Layout.fillWidth: true
                                }
                            }
                        }
                    }

                    // 视频设置
                    ColumnLayout {
                        spacing: 15

                        GroupBox {
                            title: "编码设置"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 2
                                width: parent.width

                                // 视频编码器
                                Label {
                                    text: "视频编码器:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: videoCodec
                                    model: ["H.264 (AVC)", "H.265 (HEVC)", "VP9", "AV1", "MPEG-4", "原始流"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 编码预设
                                Label {
                                    text: "编码预设:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: videoPreset
                                    model: ["超快", "非常快", "较快", "中等", "慢", "非常慢"]
                                    currentIndex: 3
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 码率控制
                                Label {
                                    text: "码率控制:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: rateControl
                                    model: ["恒定质量 (CRF)", "平均码率 (ABR)", "恒定码率 (CBR)", "可变码率 (VBR)"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 视频质量（整行独占）
                                Label {
                                    text: "视频质量:"
                                    color: "#b2bec3"
                                }
                                RowLayout {
                                    Layout.fillWidth: true
                                    Slider {
                                        id: videoQuality
                                        from: 0
                                        to: 51
                                        value: 27
                                        stepSize: 1
                                        Layout.fillWidth: true
                                        background: Rectangle {
                                            x: parent.leftPadding
                                            y: parent.topPadding + parent.availableHeight / 2 - height / 2
                                            implicitWidth: 200
                                            implicitHeight: 6
                                            width: parent.availableWidth
                                            height: implicitHeight
                                            radius: 3
                                            color: "#1e1f2a"

                                            Rectangle {
                                                width: parent.width * parent.parent.visualPosition
                                                height: parent.height
                                                color: "#6c5ce7"
                                                radius: 3
                                            }
                                        }

                                        handle: Rectangle {
                                            x: parent.leftPadding + parent.visualPosition * (parent.availableWidth - width)
                                            y: parent.topPadding + parent.availableHeight / 2 - height / 2
                                            implicitWidth: 16
                                            implicitHeight: 16
                                            radius: 8
                                            color: "#6c5ce7"
                                            border.color: "#f3f3f3"
                                        }
                                    }
                                    Label {
                                        text: videoQuality.value
                                        color:"#b2bec3"
                                        Layout.preferredWidth: 30
                                    }
                                }

                                // 分辨率（整行独占）
                                Label {
                                    text: "分辨率:"
                                    color: "#b2bec3"
                                }
                                ColumnLayout {
                                    spacing: 5

                                    // 输入框行
                                    RowLayout {
                                        spacing: 5
                                        TextField {
                                            id: widthInput
                                            text: "1920"
                                            color: "#dfe6e9"
                                            Layout.preferredWidth: 60
                                            background: Rectangle {
                                                color: "#1e1f2a"
                                                border.color: "#6c5ce7"
                                                radius: 4
                                            }
                                        }
                                        Label {
                                            text: "×"
                                            color: "#b2bec3"
                                        }
                                        TextField {
                                            id: heightInput
                                            text: "1080"
                                            color: "#dfe6e9"
                                            Layout.preferredWidth: 60
                                            background: Rectangle {
                                                color: "#1e1f2a"
                                                border.color: "#6c5ce7"
                                                radius: 4
                                            }
                                        }
                                    }

                                    // 按钮行（在输入框正下方）
                                    RowLayout {
                                        spacing: 5
                                        Button {
                                            text: "原始"
                                            onClicked: {
                                                widthInput.text = "1920";
                                                heightInput.text = "1080";
                                            }
                                            background: Rectangle {
                                                color: "#2d3436"
                                                radius: 4
                                            }
                                            contentItem: Text {
                                                text: parent.text
                                                color: "#dfe6e9"
                                            }
                                        }
                                        Button {
                                            text: "720p"
                                            onClicked: {
                                                widthInput.text = "1280";
                                                heightInput.text = "720";
                                            }
                                            background: Rectangle {
                                                color: "#2d3436"
                                                radius: 4
                                            }
                                            contentItem: Text {
                                                text: parent.text
                                                color: "#dfe6e9"
                                            }
                                        }
                                        Button {
                                            text: "1080p"
                                            onClicked: {
                                                widthInput.text = "1920";
                                                heightInput.text = "1080";
                                            }
                                            background: Rectangle {
                                                color: "#2d3436"
                                                radius: 4
                                            }
                                            contentItem: Text {
                                                text: parent.text
                                                color: "#dfe6e9"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    // 音频设置
                    ColumnLayout {
                        spacing: 15
                        GroupBox {
                            title: "音频编码设置"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 2
                                width: parent.width

                                // 音频编码器
                                Label {
                                    text: "音频编码器:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: audioCodec
                                    model: ["AAC", "MP3", "WAV", "FLAC", "原始流"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 音频质量
                                Label {
                                    text: "音频质量:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: audioQuality
                                    model: ["中等 (128k)", "高质量 (192k)", "高保真 (256k)", "无损"]
                                    currentIndex: 1
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }
                            }
                        }
                    }

                    // 字幕设置
                    /*ColumnLayout {
                        spacing: 15
                        GroupBox {
                            title: "字幕设置"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 2
                                width: parent.width

                                // 字幕编码
                                Label {
                                    text: "字幕编码:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: subtitleCodec
                                    model: ["原始流", "SRT", "ASS", "WebVTT"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 字幕样式
                                Label {
                                    text: "字幕样式:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: subtitleStyle
                                    model: ["默认", "电影黑边", "底部居中", "自定义"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }
                            }
                        }
                    }*/

                    // 软件设置
                    ColumnLayout {
                        spacing: 15
                        GroupBox {
                            title: "软件设置"
                            Layout.fillWidth: true
                            background: Rectangle {
                                color: "#2d3043"
                                radius: 6
                            }
                            label: Label {
                                text: parent.title
                                color: "#dfe6e9"
                                font.bold: true
                                leftPadding: 5
                            }

                            GridLayout {
                                columns: 2
                                width: parent.width

                                // 硬件加速
                                Label {
                                    text: "硬件加速:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: hardwareAccel
                                    model: ["自动", "无", "NVIDIA NVENC", "AMD AMF", "Intel QSV"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }

                                // 线程数
                                Label {
                                    text: "线程数:"
                                    color: "#b2bec3"
                                }
                                ComboBox {
                                    id: threadCount
                                    model: ["自动", "1", "2", "4", "8", "12", "16"]
                                    currentIndex: 0
                                    Layout.fillWidth: true
                                    background: Rectangle {
                                        color: "#1e1f2a"
                                        border.color: "#6c5ce7"
                                        radius: 4
                                    }
                                    contentItem: Text {
                                        text: parent.currentText
                                        color: "#dfe6e9"
                                        leftPadding: 10
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        // 右侧预览和日志区域
        SplitView {
            orientation: Qt.Vertical
            SplitView.fillWidth: true

            // 预览区域
            Rectangle {
                id: previewArea
                SplitView.preferredHeight: 400
                SplitView.minimumHeight: 200
                color: "#12131a"

                // 预览内容框架
                Rectangle {
                    anchors.centerIn: parent
                    width: Math.min(parent.width * 0.9, 16 * 50)
                    height: Math.min(parent.height * 0.9, 9 * 50)
                    color: "#000000"
                    border.color: "#6c5ce7"
                    border.width: 2
                    radius: 4

                    // 视频预览区域
                    Rectangle {
                        anchors.fill: parent
                        anchors.margins: 10
                        color: "#1a1b26"
                        radius: 2


                        // 字幕预览
                        Rectangle {
                            anchors.bottom: parent.bottom
                            anchors.horizontalCenter: parent.horizontalCenter
                            width: parent.width * 0.9
                            height: 30
                            color: "#6c5ce7"
                            radius: 4
                            visible: subtitlePath.text !== ""

                            Text {
                                anchors.centerIn: parent
                                text: "这是字幕预览文本"
                                color: "white"
                                font.pixelSize: 16
                            }
                        }

                        // 无水印时的提示
                        Text {
                            anchors.centerIn: parent
                            text: previewMode ? "" : "视频预览区域"
                            color: "#6c5ce7"
                            font.pixelSize: 24
                            opacity: 0.3
                        }
                    }
                }

                // 预览信息显示
                Rectangle {
                    anchors.bottom: parent.bottom
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.margins: 10
                    height: 40
                    color: "#1a1b26"
                    radius: 4
                    opacity: 0.8

                    RowLayout {
                        anchors.fill: parent
                        anchors.margins: 5

                        Label {
                            text: `${widthInput.text}×${heightInput.text} | ${videoCodec.currentText} | ${fpsCombo.currentText}`
                            color: "#dfe6e9"
                        }

                        Label {
                            text: "00:02:34 / 01:45:22"
                            color: "#dfe6e9"
                            Layout.alignment: Qt.AlignRight
                        }
                    }
                }
            }

            // 日志和进度区域
            Rectangle {
                id: logArea
                SplitView.minimumHeight: 150
                color: "#252836"

                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 10
                    spacing: 10

                    // 进度条
                    ProgressBar {
                        id: progressBar
                        Layout.fillWidth: true
                        from: 0
                        to: 1
                        value: ffmpeghandel ? ffmpeghandel.progress : 0
                        visible: processing
                        background: Rectangle {
                            implicitHeight: 20
                            color: "#1e1f2a"
                            radius: 10
                        }
                        contentItem: Item {
                            implicitHeight: 20
                            Rectangle {
                                width: progressBar.visualPosition * parent.width
                                height: parent.height
                                radius: 10
                                gradient: Gradient {
                                    GradientStop { position: 0.0; color: "#6c5ce7" }
                                    GradientStop { position: 1.0; color: "#a29bfe" }
                                }
                            }
                            Text {
                                anchors.centerIn: parent
                                text: processing ? Math.round(progressBar.value * 100) + "%" : "准备就绪"
                                color: "white"
                                font.bold: true
                            }
                        }
                    }

                    // 操作按钮
                    RowLayout {
                        Layout.fillWidth: true
                        spacing: 15

                        Button {
                            text: "开始压制"
                            enabled: !processing && videoPath.text && subtitlePath.text && outputPath.text
                            onClicked: startProcessing()
                            Layout.preferredWidth: 120
                            Layout.preferredHeight: 40
                            background: Rectangle {
                                color: parent.enabled ? "#00b894" : "#636e72"
                                radius: 6
                            }
                            contentItem: Text {
                                text: parent.text
                                color: "white"
                                font.bold: true
                                horizontalAlignment: Text.AlignHCenter
                                verticalAlignment: Text.AlignVCenter
                            }
                        }

                        Button {
                            text: "取消"
                            enabled: processing
                            onClicked: cancelProcessing()
                            Layout.preferredWidth: 120
                            Layout.preferredHeight: 40
                            background: Rectangle {
                                color: parent.enabled ? "#e74c3c" : "#636e72"
                                radius: 6
                            }
                            contentItem: Text {
                                text: parent.text
                                color: "white"
                                font.bold: true
                                horizontalAlignment: Text.AlignHCenter
                                verticalAlignment: Text.AlignVCenter
                            }
                        }

                        Button {
                            text: "生成命令行"
                            onClicked: generateCommand()
                            Layout.preferredWidth: 120
                            Layout.preferredHeight: 40
                            background: Rectangle {
                                color: "#6c5ce7"
                                radius: 6
                            }
                            contentItem: Text {
                                text: parent.text
                                color: "white"
                                font.bold: true
                                horizontalAlignment: Text.AlignHCenter
                                verticalAlignment: Text.AlignVCenter
                            }
                        }

                        Button {
                            text: "清除日志"
                            onClicked: logText.text = ""
                            Layout.preferredWidth: 120
                            Layout.preferredHeight: 40
                            background: Rectangle {
                                color: "#f39c12"
                                radius: 6
                            }
                            contentItem: Text {
                                text: parent.text
                                color: "white"
                                font.bold: true
                                horizontalAlignment: Text.AlignHCenter
                                verticalAlignment: Text.AlignVCenter
                            }
                        }
                    }

                    // 日志区域
                    Rectangle {
                        Layout.fillWidth: true
                        Layout.fillHeight: true
                        color: "#1e1f2a"
                        radius: 6
                        border.color: "#6c5ce7"
                        border.width: 1

                        ScrollView {
                            anchors.fill: parent
                            anchors.margins: 5
                            clip: true

                            TextArea {
                                id: logText
                                text: "MergeSub FFmpeg压制工具已启动\n准备处理任务..."
                                color: "#dfe6e9"
                                font.family: "Consolas"
                                cursorPosition: text.length
                                font.pixelSize: 12
                                readOnly: true
                                wrapMode: Text.Wrap
                                background: null
                            }
                        }
                    }
                }
            }
        }
    }

    // 状态栏
    Rectangle {
        id: statusBar
        anchors.bottom: parent.bottom
        width: parent.width
        height: 25
        color: "#15161e"

        RowLayout {
            anchors.fill: parent
            anchors.leftMargin: 10
            anchors.rightMargin: 10

            Label {
                text: processing ? "状态: 处理中..." : "状态: 空闲"
                color: processing ? "#00b894" : "#dfe6e9"
                font.pixelSize: 12
            }

            Label {
                text: ffmpeghandel ? ffmpeghandel.statusMessage : "初始化中..."
                color: "#dfe6e9"
                font.pixelSize: 12
                Layout.fillWidth: true
                Layout.leftMargin: 20
            }

            Label {
                text: ffmpegVersion + " | " + "MergeSub: "+mergeSubVersion
                color: "#6c5ce7"
                font.pixelSize: 12
                Layout.alignment: Qt.AlignRight
                Layout.leftMargin: 20
            }
        }
    }

    // FFmpeg处理逻辑
    function startProcessing() {
        if (processing) return;

        // 验证输入
        if (!videoPath.text || !outputPath.text) {
            logText.text += "错误: 请选择视频文件和输出位置\n";
            return;
        }

        processing = true;
        progressBar.value = 0;
        logText.text += "开始处理任务...\n";
        // 调用C++后端
        generateCommand()
        ffmpeghandel.on_Start_Encoding();
        ffmpeghandel.logMessageChanged();
    }

    function cancelProcessing() {
        if (processing) {
            ffmpeghandel.delFileUrl = `"${outputPath.text}/output.${formatCombo.currentText.toLowerCase()}"`;
            ffmpeghandel.on_Cancel_Encoding();
            processing = false;
            logText.text += "处理已取消\n";
        }
    }

    function generateCommand() {
        const command = buildFFmpegCommand();
        ffmpeghandel.sourceCommand = command;
        logText.text += `\n生成的FFmpeg命令:\n${command}\n`;
    }

    function buildFFmpegCommand() {
        // 根据用户设置构建FFmpeg命令
        let cmd = "-i ";
        cmd += `"${videoPath.text}" `;

        // 添加字幕
        if (subtitlePath.text !== "") {
            cmd += `-vf ass="${subtitlePath.text}" `;
            //cmd += `-map 0:v -map 0:a -map 1:s `;
        }

        // 视频编码设置
        //cmd += `-c:v ${getVideoCodec()} `;
        //cmd += `-preset ${getVideoPreset()} `;
        //cmd += `-crf ${Math.round(videoQuality.value)} `;

        //分辨率设置
        if (widthInput.text !== "1920" || heightInput.text !== "1080") {
            cmd += `-vf "scale=${widthInput.text}:${heightInput.text}" `;
        }

        // 音频设置
        //cmd += "-c:a aac -b:a 192k ";

        // 字幕设置
        //if (subtitlePath.text !== "") {
         //   cmd += "-c:s copy ";
        //}

        // 输出文件
        cmd += `"${outputPath.text}/output.${formatCombo.currentText.toLowerCase()}"`;

        return cmd;
    }

    function getVideoCodec() {
        switch(videoCodec.currentIndex) {
        case 0: return "libx264";
        case 1: return "libx265";
        case 2: return "libvpx-vp9";
        case 3: return "libaom-av1";
        default: return "libx264";
        }
    }

    function getVideoPreset() {
        switch(videoPreset.currentIndex) {
        case 0: return "ultrafast";
        case 1: return "veryfast";
        case 2: return "faster";
        case 3: return "medium";
        case 4: return "slow";
        case 5: return "veryslow";
        default: return "medium";
        }
    }

    function getLocalPath(fileUrl) {
        const url = Qt.createQmlObject('import QtQuick 2.0; QtObject {}', mainWindow)
        const localPath = Qt.resolvedUrl(fileUrl).toString()

        // 移除 file:// 前缀
        if (localPath.startsWith("file://")) {
            if (Qt.platform.os === "windows" && localPath.length > 8 && localPath[8] === ':') {
                return localPath.substring(8)
            }
            return localPath.substring(7)
        }
    }

    Connections {
        target: ffmpeghandel

        onFfmpeg_VersionChanged: {
            ffmpegVersion = "FFmpeg: " + ffmpeghandel.ffmpeg_Version
        }

        onLogMessageChanged: {
            logText.text += ffmpeghandel.logMessage;
            progressBar.value = timeStringToMilliseconds(ffmpeghandel.video_Duration)/timeStringToMilliseconds(ffmpeghandel.video_Total_Duration);
            progressBar_Value = Math.round(progressBar.value*100)+"%"
            if(progressBar_Value === "100%"){
                processing = false;
                logText.text += "处理完成! 输出文件: " +`"${outputPath.text}/output.${formatCombo.currentText.toLowerCase()}"`+ "\n";
            }
        }


        function onProcessingChanged() {
            processing = ffmpegProcessor.processing;
        }


        function onStatusMessageChanged() {
            // 状态栏消息自动更新
        }

        function onVideoInfoReady(width, height, frameRate, duration) {
            // 更新视频信息
            if (width > 0 && height > 0) {
                widthInput.text = width;
                heightInput.text = height;
            }

            // 更新预览信息
            logText.text += `获取视频信息: ${width}×${height} ${frameRate}fps\n`;
        }

        function timeStringToMilliseconds(timeString) {
            const timeRegex = /^(\d{2}):(\d{2}):(\d{2}\.\d+)$/;
            const match = timeString.match(timeRegex);

            if (!match) return null;

            const hours = parseInt(match[1]);
            const minutes = parseInt(match[2]);
            const seconds = parseFloat(match[3]);

            return Math.round((hours * 3600 + minutes * 60 + seconds) * 1000);
        }

        function onProcessingFinished(success, outputFile) {
            if (success) {
                logText.text += "处理完成! 输出文件: " + outputFile + "\n";
            } else {
                logText.text += "处理失败\n";
            }
        }
    }
}

